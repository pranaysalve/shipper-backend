{"version":3,"file":"useReviewWorkflows.js","sources":["../../../../../admin/src/routes/settings/hooks/useReviewWorkflows.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useAPIErrorHandler, useNotification } from '@strapi/admin/strapi-admin';\nimport { type MessageDescriptor, useIntl } from 'react-intl';\n\nimport {\n  GetWorkflowsParams,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useGetWorkflowsQuery,\n  useUpdateWorkflowMutation,\n} from '../../../services/settings';\n\nimport type { Create, Update } from '../../../../../shared/contracts/review-workflows';\n\nconst DEFAULT_UNEXPECTED_ERROR_MSG = {\n  id: 'notification.error',\n  defaultMessage: 'An error occurred, please try again',\n} satisfies MessageDescriptor;\n\ntype UseReviewWorkflowsArgs = GetWorkflowsParams & {\n  skip?: boolean;\n};\n\nconst useReviewWorkflows = (params: UseReviewWorkflowsArgs = {}) => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\n\n  const { skip = false, ...queryParams } = params;\n\n  const { data, isLoading, error } = useGetWorkflowsQuery(\n    {\n      populate: ['stages', 'stageRequiredToPublish'],\n      ...queryParams,\n    },\n    {\n      skip,\n    }\n  );\n\n  React.useEffect(() => {\n    if (error) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(error),\n      });\n    }\n  }, [error, formatAPIError, toggleNotification]);\n\n  const [createWorkflow] = useCreateWorkflowMutation();\n  const create = React.useCallback(\n    async (data: Create.Request['body']['data']) => {\n      try {\n        const res = await createWorkflow({ data });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return res;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.created', defaultMessage: 'Created workflow' }),\n        });\n\n        return res;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [createWorkflow, formatAPIError, formatMessage, toggleNotification]\n  );\n\n  const [updateWorkflow] = useUpdateWorkflowMutation();\n  const update = React.useCallback(\n    async (id: string, data: Update.Request['body']['data']) => {\n      try {\n        const res = await updateWorkflow({ id, data });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return res;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.updated', defaultMessage: 'Updated workflow' }),\n        });\n\n        return res;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [formatAPIError, formatMessage, toggleNotification, updateWorkflow]\n  );\n\n  const [deleteWorkflow] = useDeleteWorkflowMutation();\n  const deleteAction = React.useCallback(\n    async (id: string) => {\n      try {\n        const res = await deleteWorkflow({ id });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.deleted', defaultMessage: 'Deleted workflow' }),\n        });\n\n        return res.data;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [deleteWorkflow, formatAPIError, formatMessage, toggleNotification]\n  );\n\n  const { workflows = [], meta } = data ?? {};\n\n  return {\n    // meta contains e.g. the total of all workflows. we can not use\n    // the pagination object here, because the list is not paginated.\n    meta,\n    workflows,\n    isLoading,\n    error,\n    create,\n    delete: deleteAction,\n    update,\n  };\n};\n\nexport { useReviewWorkflows };\n"],"names":["DEFAULT_UNEXPECTED_ERROR_MSG","id","defaultMessage","useReviewWorkflows","params","toggleNotification","useNotification","formatMessage","useIntl","_unstableFormatAPIError","formatAPIError","useAPIErrorHandler","skip","queryParams","data","isLoading","error","useGetWorkflowsQuery","populate","React","useEffect","type","message","createWorkflow","useCreateWorkflowMutation","create","useCallback","res","err","updateWorkflow","useUpdateWorkflowMutation","update","deleteWorkflow","useDeleteWorkflowMutation","deleteAction","workflows","meta","delete"],"mappings":"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"}