import { jsx } from 'react/jsx-runtime';
import * as React from 'react';
import { createContext } from '@strapi/admin/strapi-admin';
import { useDocument } from '../hooks/useDocument.mjs';
import { buildValidParams } from '../utils/api.mjs';

const [DocumentProvider, useDocumentContext] = createContext('DocumentContext');
/**
 * TODO: Document in contributor docs, Add unit test
 *
 * This context provider and its associated hook are used to access a document at its root level
 * and expose a function to change the current document being viewed to one of the root level docuemnt's relations.
 *
 * The useDocumentContext hook exposes:
 * - meta: information about the currentDocument,
 * - document: the actual document,
 * - changeDocument: a function to change the current document to one of its relations.
 * - rootDocumentMeta: information about the root level document (current page)
 */ const DocumentContextProvider = ({ children, initialDocument, onPreview })=>{
    /**
   * Initialize with the "root" document and expose a setter method to change to
   * one of the root level document's relations.
   */ const [currentDocumentMeta, changeDocument] = React.useState(initialDocument);
    const params = React.useMemo(()=>buildValidParams(currentDocumentMeta.params ?? {}), [
        currentDocumentMeta.params
    ]);
    const document = useDocument({
        ...currentDocumentMeta,
        params
    });
    const [documentHistory, setDocumentHistory] = React.useState([]);
    return /*#__PURE__*/ jsx(DocumentProvider, {
        changeDocument: changeDocument,
        document: document,
        rootDocumentMeta: {
            documentId: initialDocument.documentId,
            model: initialDocument.model,
            collectionType: initialDocument.collectionType
        },
        meta: currentDocumentMeta,
        documentHistory: documentHistory,
        setDocumentHistory: setDocumentHistory,
        onPreview: onPreview,
        children: children
    });
};

export { DocumentContextProvider, useDocumentContext };
//# sourceMappingURL=DocumentContext.mjs.map
